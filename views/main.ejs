<!DOCTYPE html>
<html lang="en">
<head>
    <script type="text/javascript" src="/keys.js"></script>
    <script type="text/javascript" src="/dateMethods.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js" integrity="sha384-SR1sx49pcuLnqZUnnPwx6FCym0wLsk5JZuNx2bPPENzswTNFaQU1RDvt3wT4gWFG" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.min.js" integrity="sha384-j0CNLUeiqtyaRmlzUHCPZ+Gy5fQu0dQ6eZ/xAww941Ai1SxSY+0EQqNXNE6DZiVc" crossorigin="anonymous"></script>
    <script src="https://apis.google.com/js/api.js"></script>
    <link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
    <link rel="stylesheet" type="text/css" href="css/style.css" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <meta charset="UTF-8">
    <title>Document</title>
    <script src="https://apis.google.com/js/api.js"></script>
    <script>
    
    const API_KEY = getKeys().API_KEY;
    const CLIENT_ID = getKeys().CLIENT_ID;
    const MAX_MESSAGES = 60;
    let userMailAddress = '';
    const labels = {
        INBOX : "INBOX", 
        SENT : "SENT", 
        UNREAD : "UNREAD",
        DRAFTS : "DRAFTS"
    }
    const MS_PER_DAY = 1000 * 60 * 60 * 24;
    label = labels.INBOX;

    function authenticate() {
        hideBody();        
        return gapi.auth2.getAuthInstance()
            .signIn({scope: "https://mail.google.com/ https://www.googleapis.com/auth/gmail.compose https://www.googleapis.com/auth/gmail.modify https://www.googleapis.com/auth/gmail.readonly"})
            .then(function() { console.log("Sign-in successful"); },
                function(err) { alert("Error signing in. Please reload and sign in."); });
    }

    function loadClient() {
        gapi.client.setApiKey(API_KEY);
        return gapi.client.load("https://gmail.googleapis.com/$discovery/rest?version=v1")
            .then(function() { console.log("GAPI client loaded for API"); 
                                showBody();
                                getEmailAddress(); },
                function(err) { alert("Error loading GAPI client for API"); })
                ;
    }

    // show spinner at the center of an element given it's id
    function showSpinner(id){
        let div = document.getElementById(id);
        div.innerHTML = 
        '<div class="enclose-div center-vh">'
            + '<div class="spinner-border text-warning" role="status">'
                +'<span class="sr-only">Loading...</span>'
            + '</div>'
        + '</div>';
    }

    // mail-logo 
    function showLogo(){
        let messageDiv = document.getElementById("display-message");
        messageDiv.innerHTML = 
        '<div class="enclose-div center-vh">'
            + '<i class="bi bi-envelope-fill fa-10x"></i>'
        + '</div>'
    }

    function hideBody(){
        document.getElementsByTagName("BODY")[0].hidden = true;
    }

    function showBody(){
        document.getElementsByTagName("BODY")[0].hidden = false;
        showLogo();
    }

    function signOut() {
        gapi.auth2.getAuthInstance().signOut();   
        document.getElementById("messages").innerHTML = ""; 
        authenticate().then(loadClient).then(fetchMessages);
    }

    function getEmailAddress() {

        return gapi.client.gmail.users.getProfile({"userId" : 'me'})
            .then(function(response) {                
                userMailAddress = response.result.emailAddress;
            },
            function(err) { console.error("Execute error", err); });
    }

    function getHeaderAsJson(headers){
        headersJson = {};
        headers.forEach(header => {
            headersJson[header.name] = header.value;
        });
        return headersJson;
    }    

    function changeLabel(newLabel){
        if(newLabel !== label){
            label = newLabel;
            showLogo();
            document.getElementById('mail-label').innerHTML = label;
            if(label == labels.DRAFTS){
                fetchMessages('drafts');
            }
            else{
                fetchMessages();
            }            
        }
    }

    // function fetchDrafts(){
    //     return gapi.client.gmail.users.drafts.list({"userId" : "me"})
    //     .then(function(response) {
    //         let messages = response.result.drafts;
    //         console.log(messages);
    //         listMessages(messages);            
    //     });
    // }

    function fetchMessages(type='messages'){
                    
        showSpinner("messages");
        return gapi.client.gmail.users.messages.list({ userId : 'me' , labelIds : label, maxResults : MAX_MESSAGES})
        .then(function(response) {
            let messages = response.result[type];
            listMessages(messages, type);            
        });
    }

    function getDate(messageId){
        return gapi.client.gmail.users.messages.get({"userId" : 'me', "id" : messageId, format : 'minimal'})
            .then(function(response){
                return response.result.internalDate;
            });        
    }

    // return date, from address, subject, snippet for a message
    function getMessage(messageId){
        return gapi.client.gmail.users.messages.get({"userId" : 'me', "id" : messageId})
            .then(function(response){
                const snippet = response.result.snippet;     
                headersJson = getHeaderAsJson(response.result.payload.headers);
                let from = headersJson.From;
                let subject = headersJson.Subject;
                return {
                    snippet : response.result.snippet,
                    from : headersJson.From,
                    subject : headersJson.Subject,
                    date : parseInt(response.result.internalDate)
                }
            });
    }

    function listMessages(messages, type){        
        // console.log(messages);
        messageDetails = {}
        let promises = [];
        messages.forEach(message => {
            promises.push(getMessage(message.id));
        });
        Promise.all(promises).then(function(values){
            for(let i = 0; i < messages.length; i++){
                messageDetails[messages[i].id] = values[i];
            }
            messages.sort(function(a) {-(messageDetails[a.id].date)});
            // console.log("Sorted messages");            
            // console.log(messages);

            //checking if dates are sorted
            messages.forEach(message => {
                console.log(messageDetails[message.id].date);
            })
            let messagesDiv = document.getElementById('messages');
            messagesDiv.innerHTML = "";
            messages.forEach(message => {

                // add html content for each message
                // from address, subject and snippet
                // and an onclick method to fetch the message
                let newMessage = document.createElement('button');
                newMessage.type = 'button';
                newMessage.onclick = function (){
                    return gapi.client.gmail.users.messages.get({"userId" : 'me', "id" : message.id})
                        .then(function(response){
                            json = response.result;                            
                            document.getElementById("display-message").innerHTML = 
                                '<div class="email-details">'
                                    + '<h5 class="subject">' + messageDetails[message.id].subject + '</h5>'
                                    + '<div class="logo-from-date">'
                                        + '<div class="logo-display-message"><div class="center-vh">' + messageDetails[message.id].from[0].toUpperCase() + '</div></div>'
                                        + '<div class="from-date ">'
                                        + '<div class="from">' + messageDetails[message.id].from  + '</div>'
                                        + '<div class="date">' + getFullDateTime(messageDetails[message.id].date) + '</div>'
                                    + '</div>'
                                + '</div>';  
                            let messageHTML = addMessagePart(json.payload);
                            if(messageHTML.length == 0 && json.payload.mimeType == 'text/plain' && json.payload.body.data !== undefined){
                                messageHTML = (atob(json.payload.body.data.replace(/-/g, '+').replace(/_/g, '/')));
                            }
                            document.getElementById("display-message").innerHTML += messageHTML;
                        })
                };
                newMessage.classList = "message list-group-item list-group-item-action ";
                
                newMessage.innerHTML = 
                '<div class="row">'
                    + '<div class="message-overview col-10">'
                        + '<div class="overflow">' + messageDetails[message.id].from + '</div>'
                        + '<div class="overflow">' + messageDetails[message.id].subject + '</div>'
                        + '<div class="overflow">' + messageDetails[message.id].snippet + '</div>'
                    + '</div>'
                    + '<div class="date-time col-2">'
                        + getDateTime(messageDetails[message.id].date)
                    + '</div>'
                + '</div>';
                messagesDiv.append(newMessage);
            });
            
        });              
    }    

    function addMessagePart(messagePart){
        let messageHTML = "";
        if(messagePart.body.data !== undefined && (messagePart.mimeType == "text/html")){
            messageHTML = (atob(messagePart.body.data.replace(/-/g, '+').replace(/_/g, '/')));
            
        }
        if(messagePart.parts !== undefined){
            messagePart.parts.forEach(part => {
                messageHTML += addMessagePart(part);
            });
        }
        return messageHTML;
    }   

    function setUpMessageDivForSendDetails(){
        let messageDiv = document.getElementById("display-message");
        messageDiv.innerHTML = 
        '<form onsubmit="return sendMail();">'
        + '<div class="send-mail">'
            + '<input readonly id="from-send-mail" class="send-mail-element " type="text" value="From : ' + userMailAddress + '"//>'
            + '<div class="send-mail-element"><label>To: </label><input required id="to-send-mail" type="text" class=""></input></div>'
            + '<input id="subject-send-mail" type="text" class="send-mail-element"  placeholder="Subject"//><br>'
            + '<textarea id="content-send-mail" type="text" class="send-mail-element send-mail-content"  placeholder="Content"> </textarea>'
            + '<div>'
                + '<div class="row">'
                    + '<div class="col">'
                        +  '<button type="submit" class="btn btn-outline-secondary" title="Send"><i class="fas fa-paper-plane"></i></button>'
                    + '</div>'
                    + '<div class="col" style="text-align:right;">'
                        +  '<button type="button" class="btn btn-outline-secondary" onclick="showLogo()" title="Discard"><i class="bi bi-trash"></i></button>'
                    + '</div>'
                + '</div>'
            + '</div>'
        + '</form>'
    }

    function sendMail(){
        let messageInnerHTML = document.getElementById("display-message").innerHTML;
        const to = document.getElementById("to-send-mail").value;
        const subject = document.getElementById("subject-send-mail").value;
        const content = document.getElementById("content-send-mail").value;
        const message = "From: " + userMailAddress + "\r\n" + 
                        "To: " + to + "\r\n" +
                        "Subject: " + subject + "\r\n\r\n" +
                        // 'Content-Type: text/plain; charset=utf-8\r\n' + 
                        // 'MIME-Version: 1.0\r\n' +
                        content;
        
        showSpinner("display-message");
        const encodedMessage = btoa(message).replace(/\+/g, '-').replace(/\//g, '_');
        gapi.client.gmail.users.messages.send({
            userId: 'me',
            resource: {
                raw: encodedMessage
            }
        }).then(function (res) { 
            document.getElementById("display-message").innerHTML = 
            '<div class="sent-mail-message-div"> '    
                + '<div class="alert alert-success sent-mail-message center-vh" role="alert">'
                    + '<p>Message sent</p>'
                + '</div>'
            + '</div>'
            }, function(err){            
                $('#invalid-message-modal').modal('show');                
                document.getElementById("display-message").innerHTML = messageInnerHTML;
                document.getElementById("to-send-mail").value = to;
                document.getElementById("subject-send-mail").value = subject;
                document.getElementById("content-send-mail").value = content;
            });
        return false;
    }

    gapi.load("client:auth2", function() {
        gapi.auth2.init({"client_id" : CLIENT_ID});
    });
    
    let messagesDiv = document.getElementById("inbox");
    messagesDiv.style.height = window.innerHeight - messagesDiv.offsetTop;
    </script>   
</head>

<body  hidden onload="authenticate().then(loadClient).then(fetchMessages)">
    
    <div class="container-fluid full-height">
        <div class="modal fade" tabindex="-1" id="invalid-message-modal" role="dialog">
            <div class="modal-dialog">
            
              <div class="modal-content">
                <div class="modal-header" style="padding: 10px 10px 10px 15px; margin: 0px;">
                    <h4>Error</h4>
                  <button type="button" class="btn btn-default" data-bs-dismiss="modal">&times;</button>
                  
                </div>
                <div class="modal-body"> 
                        <div class="alert alert-danger" role="alert">
                            <p>The address in the 'To' field is not recognized.
                                Please make sure that the address is properly formed.</p>
                         </div>
                </div>
              </div>
              
            </div>
          </div>
        <div class="row full-height ">

            <%- include('partials/sidebar'); %>

            <div class="col-4 body-background inbox" id="inbox">
                <h6 id="mail-label" class=" inbox-label">INBOX </h6>
                <div class="messages-div list-group" id="messages">
                    
                </div>               
            </div>
            <div class="col-5 outer-display-message body-background">
                <!-- Do not change display-message id, many functions alter it's innerHTML 
                    If you change, then don't forget to replace all instances of display-message in the file
                -->                
                <div id="display-message" class="display-message-div">
                    
                </div>
            </div>
        </div>
        
    </div>
</body>
</html>